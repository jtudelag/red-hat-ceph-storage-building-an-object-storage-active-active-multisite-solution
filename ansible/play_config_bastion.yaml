- hosts: bastion
  any_errors_fatal: true
  become: true
  tasks:

#  - name: Install pkgs
#    yum:
#      name: "{{ item }}"
#      state: latest
#    with_items:
#      - git
#      - ansible
#      - docker
#      - lvm2
#      - httpd
#      - yum-utils
#      - createrepo
#      - docker-python
#      - python-docker
#      - ceph-common


  - import_tasks: task_config_network.yaml
  - import_tasks: task_create_lvol_fs.yaml


#
# start and configure httpd to enable repo
#

  - name: Start httpd
    systemd:
      name: httpd
      enabled: yes
      state: started
      masked: no


#
#Install and configure ceph-ansible for each DC
#

  - name: Install ceph-ansible and ansible on bastion
    yum:
      name: ceph-ansible
      state: latest

  - name: Create install dirs
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - /root/dc1
      - /root/dc2

  - name: synchronize ceph-ansible dirs for each dc
    synchronize:
      src: /usr/share/ceph-ansible
      dest: "{{ item }}"
    with_items:
      - /root/dc1/
      - /root/dc2/
    delegate_to: "{{ inventory_hostname }}"

  - name: Copy ansible.cfg
    copy:
      src: "files/ansible.cfg"
      dest: "{{ item }}"
      owner: root
      group: root
    with_items:
     - "/root/dc1/ceph-ansible/ansible.cfg"
     - "/root/dc2/ceph-ansible/ansible.cfg"

  - name: Copy inventory
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
    with_items:
      - { src: 'files/inventory_dc1', dest: '/root/dc1/ceph-ansible/inventory' }
      - { src: 'files/inventory_dc2', dest: '/root/dc2/ceph-ansible/inventory' }


#
# Dowload/sync repos on bastion host
#

  - name: Copy create_repos script
    copy:
      src: "../hacks/sync-repos.sh"
      dest: "{{ item }}"
      owner: root
      group: root
    with_items:
      - /root/

#
# Configure docker and start registry on bastion
#

  - name: Copy registries.conf
    copy:
      src: files/registries.conf
      dest: /etc/containers/registries.conf
      owner: root
      group: root 

  - name: Start docker
    systemd:
      name: docker
      enabled: yes
      state: started
      masked: no

  - name: Copy systemd to start local docker registry
    copy:
      src: "../hacks/local-registry.service"
      dest: /etc/systemd/system/local-registry.service
      owner: root
      group: root 
      mode: 0644

  - name: Start registry
    systemd:
      name: local-registry
      enabled: yes
      state: started
      masked: no

  - name: Wait for port 5000 from registry
    wait_for:
      port: 5000
      delay: 10

  - name: pull an image
    docker_image:
      name: registry.access.redhat.com/rhceph/rhceph-3-rhel7

  - name: Tag and push to local registry
    docker_image:
       name: rhceph/rhceph-3-rhel7
       repository: 10.0.0.10:5000/rhceph/rhceph-3-rhel7
       tag: latest
       push: yes

  handlers:
  - name: Restart Network
    service: name=network state=restarted

