- hosts: bastion
  any_errors_fatal: true
  become: true
  tasks:

#  - name: Install pkgs
#    yum:
#      name: "{{ item }}"
#      state: latest
#    with_items:
#      - git
#      - ansible
#      - docker
#      - lvm2
#      - httpd
#      - yum-utils
#      - createrepo
#      - docker-python
#      - python-docker
#      - ceph-common
#      - ipa-client


  - import_tasks: task_config_network.yaml
  - import_tasks: task_config_hosts.yaml
  - import_tasks: task_create_lvol_fs.yaml
  - import_tasks: task_config_ntp.yaml
  - import_tasks: task_install_s3cmd.yaml
  - import_tasks: task_config_ssh.yaml
 


#
# start and configure httpd to enable repo
#

  - name: Start httpd
    systemd:
      name: httpd
      enabled: yes
      state: started
      masked: no


#
#Install and configure ceph-ansible for each DC
#

  - name: Install ceph-ansible and ansible on bastion
    yum:
      name: ceph-ansible
      state: latest

  - name: Create install dirs
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - /root/dc1
      - /root/dc2

  - name: synchronize ceph-ansible dirs for each dc
    synchronize:
      src: /usr/share/ceph-ansible
      dest: "{{ item }}"
    with_items:
      - /root/dc1/
      - /root/dc2/
    delegate_to: "{{ inventory_hostname }}"

  - name: Copy ansible.cfg
    copy:
      src: "files/ansible.cfg"
      dest: "{{ item }}"
      owner: root
      group: root
    with_items:
     - "/root/dc1/ceph-ansible/ansible.cfg"
     - "/root/dc2/ceph-ansible/ansible.cfg"

  - name: Copy inventory
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
    with_items:
      - { src: 'files/inventory_dc1', dest: '/root/dc1/ceph-ansible/inventory' }
      - { src: 'files/inventory_dc2', dest: '/root/dc2/ceph-ansible/inventory' }
      - { src: 'files/inventory_global', dest: '/etc/ansible/hosts' }

  - name: Copy ceph-ansible files and workarounds
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
    with_items:
      - { src: 'files/site-docker.yml', dest: '/root/dc1/ceph-ansible/site-docker.yml' }
      - { src: 'files/purge-docker-cluster.yml', dest: '/root/dc1/ceph-ansible/purge-docker-cluster.yml' }


  - name: add ceph-ansible group_vars templates
    template:
      src: "templates/{{ item.src }}" 
      dest: "{{ item.dest }}"
      owner: root
      group: root
    with_items:
     - { src: 'all_ceph.yml.j2', dest: '/root/dc1/ceph-ansible/group_vars/all.yml' }
     - { src: 'osds_ceph.yml.j2', dest: '/root/dc1/ceph-ansible/group_vars/osds.yml' }
     - { src: 'rgws_ceph.yml.j2', dest: '/root/dc1/ceph-ansible/group_vars/rgws.yml' }
     - { src: 'mgrs_ceph.yml.j2', dest: '/root/dc1/ceph-ansible/group_vars/mgrs.yml' }
     - { src: 'clients_ceph.yml.j2', dest: '/root/dc1/ceph-ansible/group_vars/clients.yml' }
#
# Dowload/sync repos on bastion host
#

  - name: Copy create_repos script
    copy:
      src: "../hacks/sync-repos.sh"
      dest: "{{ item }}"
      owner: root
      group: root
    with_items:
      - /root/

#
# Configure docker and start registry on bastion
#

  - name: Copy registries.conf
    copy:
      src: files/registries.conf
      dest: /etc/containers/registries.conf
      owner: root
      group: root 

  - name: Start docker
    systemd:
      name: docker
      enabled: yes
      state: started
      masked: no

  - name: Copy systemd to start local docker registry
    copy:
      src: "../hacks/local-registry.service"
      dest: /etc/systemd/system/local-registry.service
      owner: root
      group: root 
      mode: 0644

  - name: Start registry
    systemd:
      name: local-registry
      enabled: yes
      state: started
      masked: no

  - name: Wait for port 5000 from registry
    wait_for:
      port: 5000
      delay: 10

  - name: pull an image
    docker_image:
      name: "{{ item }}"
    with_items:
      - registry.access.redhat.com/rhceph/rhceph-3-dashboard-rhel7:3-12
      - registry.access.redhat.com/rhceph/rhceph-3-rhel7:3-20
      - registry.access.redhat.com/openshift3/prometheus:v3.9

  - name: Tag and push to local registry
    docker_image:
       name: "{{ item.image_name }}"
       repository: "{{ item.image }}"
       tag: "{{ item.tag }}"
       push: yes
    with_items:
       - { image_name: "rhceph/rhceph-3-rhel7" , image: "10.0.0.10:5000/rhceph/rhceph-3-rhel7" , tag: '3-20' }
       - { image_name: "rhceph/rhceph-3-dashboard-rhel7" , image: "10.0.0.10:5000/rhceph/rhceph-3-dashboard-rhel7" , tag: '3' }
       - { image_name: "openshift3/prometheus" , image: "10.0.0.10:5000/openshift3/prometheus" , tag: 'v3.9' }


  handlers:
    - import_tasks: handlers_common.yaml

